set -g mouse on
set -g status on

set-option -g history-limit 10000 # extended pane histories

bind '|' split-window -h -c '#{pane_current_path}'  # Split panes vertically
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes horizontally
bind c new-window -c '#{pane_current_path}' -n '[No Name]' # Create new window
bind-key , command-prompt "rename-window '%%'"
# set allow-rename off

# bindfor fast resizing (can hold arrow keys too)
bind -n C-S-Up resize-pane -U 1
bind -n C-S-Down resize-pane -D 1
bind -n C-S-Left resize-pane -L 1
bind -n C-S-Right resize-pane -R 1

tmux_commands_with_legacy_scroll="nano less more man git ssh"

# bind-key -T root WheelUpPane \
  # if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    # 'send -Mt=' \
    # 'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      # "copy-mode -t= ; send -t= Up" "copy-mode -t="'
# # bind-key -r WheelUpPane run-shell "bash ~/x.sh"
#
# bind-key -T root WheelDownPane \
  # if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    # 'send -Mt=' \
    # 'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      # "send -t= Down" "copy-mode -et= ; send -Mt="'


# smart pane switching with awareness of vim splits
bind -n M-Left run "tmux send-keys C-h"
bind -n M-Right run "tmux send-keys C-l"
bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | grep -Eiq \\(vim\\) && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | grep -Eiq \\(vim\\) && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iq \\(vim\\) && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -Eiq \\(vim\\) && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -Eiq \\(vim\\) && tmux send-keys 'C-\\') || tmux select-pane -l"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-Left' select-pane -L
# bind-key -T copy-mode-vi 'C-Down' select-pane -D
# bind-key -T copy-mode-vi 'C-Up' select-pane -U
# bind-key -T copy-mode-vi 'C-Right' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# set key as the prefix key combination
set -g prefix C-a
# bind C-b to previous window
bind b previous-window

# Tell tmux that Prefix+a should send the prefix key to the program running in
# the current pane.
# Useful since Ctrl+a usually jumps to beginning of line but we remapped that
# key. Now you can press `<prefix> + a` to do so.
bind a send-prefix


TM_BG="colour236"

TM_ACTIVE_COLOR="colour6"
TM_INACTIVE_COLOR="colour242"

TM_TXT_BRIGHT="colour255"
TM_TXT_MID="colour241"
TM_TXT_DARK="colour235"

TM_HIGHLIGHT_COLOR="colour3"

TM_PREFIX_ACTIVE=$TM_HIGHLIGHT_COLOR
TM_PREFIX_INACTIVE=$TM_TXT_MID

TM_BORDER_ACTIVE="colour4"
TM_BORDER_INACTIVE=$TM_INACTIVE_COLOR

TM_LEFT_TITLE_TXT=$TM_TXT_MID
TM_LEFT_TITLE_BG="colour176"

TM_LEFT_WDW_TXT=$TM_TXT_MID
TM_LEFT_WDW_BG="colour237"

TM_RIGHT_BG="colour237"
TM_RIGHT_TXT=$TM_TXT_BRIGHT
TM_RIGHT_SEP=$TM_HIGHLIGHT_COLOR

# set pane border formats
set -wg pane-border-status top
set-option -g pane-active-border-style fg=$TM_BORDER_ACTIVE
set -g pane-border-style fg=$TM_BORDER_INACTIVE
set -g pane-border-format '\
#[bold] \
#(zsh ~/.dotfiles/tmux_scripts/mounts.sh "#{pane_current_path}")\
  \
#(zsh ~/.dotfiles/tmux_scripts/path.sh "#{pane_current_path}")\
  \
#(zsh ~/per_min.sh zsh ~/.dotfiles/tmux_scripts/repo_url.sh "#{pane_current_path}")\
  \
#(zsh ~/per_min.sh zsh ~/.dotfiles/tmux_scripts/vcs.sh "#{pane_current_path}")\
 '
# # The statusbar {
set -g status-interval 1
set -g status-left-length 1000
set -g status-right-length 1000
set -g status-position bottom
set -g status-justify left
set -g status-bg $TM_BG

# #[fg=$TM_LEFT_TITLE_TXT,bg=$TM_LEFT_TITLE_BG,bold] #S #[default,fg=$TM_LEFT_TITLE_BG,bold]\

set -g status-left "\
#[default,fg=$TM_LEFT_TITLE_BG,bold]\
#[default] \
#[fg=$TM_BG,bg=$TM_ACTIVE_COLOR]#[fg=$TM_LEFT_WDW_TXT,bold]#[default,fg=$TM_ACTIVE_COLOR]\
#[default] #{?client_prefix,#[fg=$TM_PREFIX_ACTIVE],#[fg=$TM_PREFIX_INACTIVE]} "

set -g status-right "\
#[default,fg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] Cluster: #(kubectl config current-context | sed 's/^gke_//g' | sed 's/_.*_/:/g')\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] V2: M #(solana balance ~/switchboard_environments_v2/mainnet/upgrade_authority/upgrade_authority.json -u mainnet-beta | grep -oE "[0-9]*[\.][0-9]") D #(zsh ~/per_min.sh solana balance ~/switchboard_environments_v2/devnet/upgrade_authority/upgrade_authority.json -u https://switchboard.devnet.rpcpool.com/f9fe774d81ba4527a418f5b19477| grep -oE "[0-9]*[\.][0-9]")\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] V2 wSOL: M #(spl-token account-info  So11111111111111111111111111111111111111112 ~/switchboard_environments_v2/mainnet/upgrade_authority/upgrade_authority.json -v -u mainnet-beta | grep "Balance" | sed 's/.* //g' | grep -oE "[0-9]*[\.][0-9]") \
D #(spl-token account-info  So11111111111111111111111111111111111111112 ~/switchboard_environments_v2/devnet/upgrade_authority/upgrade_authority.json -v -u devnet | grep "Balance" | sed 's/.* //g' | grep -oE "[0-9]*[\.][0-9]")\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] Network: #(readlink ~/switchboard_accounts_v2 | awk -F/ '{print \$NF}')\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] #(date +'%a %b %e, %l:%M %p' | sed 's/  / /g')\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] VT:#(bash ~/.dotfiles/tmux_scripts/vietnam-time.sh)\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] SGT:#(bash ~/.dotfiles/tmux_scripts/sp-time.sh)\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
"
# readlink -f ~/switchboard_accounts | awk -F "/" '{print $NF}'

setw -g window-status-current-style fg=$TM_TXT_MID
setw -g window-status-current-style bg=$TM_ACTIVE_COLOR
setw -g window-status-style fg=$TM_TXT_MID
setw -g window-status-style bg=$TM_LEFT_WDW_BG
setw -g window-status-format "#[fg=$TM_BG,bg=$TM_LEFT_WDW_BG]#[default,fg=$TM_LEFT_WDW_TXT,bg=$TM_LEFT_WDW_BG] #I:#F #[fg=$TM_LEFT_WDW_BG,bg=$TM_BG]"
setw -g window-status-current-format "#[fg=$TM_BG,bg=$TM_ACTIVE_COLOR]#[default,bold,fg=$TM_LEFT_WDW_TXT,bg=$TM_ACTIVE_COLOR] #I:#F #[fg=$TM_ACTIVE_COLOR,bg=$TM_BG]"
# # }

set-window-option -g automatic-rename off
set-option -g allow-rename off
bind-key / copy-mode \; send-key ?

# bind-key  -T root WheelUpPane copy-mode \; \
  # send-keys -X -t #{pane_tty} C-b \; \
  # send-keys -X -t #{pane_tty} M-[4~ \; \
  # send-keys -X -t #{pane_tty} C-b
