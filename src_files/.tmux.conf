set -g mouse on
set -g status on

set-option -g history-limit 10000 # extended pane histories

bind '|' split-window -h -c '#{pane_current_path}'  # Split panes vertically
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes horizontally
bind c new-window -c '#{pane_current_path}' -n '[No Name]' # Create new window
bind-key , command-prompt "rename-window '%%'"
# set allow-rename off

# bindfor fast resizing (can hold arrow keys too)
bind -n C-S-Up resize-pane -U 1
bind -n C-S-Down resize-pane -D 1
bind -n C-S-Left resize-pane -L 1
bind -n C-S-Right resize-pane -R 1

tmux_commands_with_legacy_scroll="nano less more man git"

bind-key -T root WheelUpPane \
  if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
  if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
    'send -Mt=' \
    'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
      "send -t= Down" "send -Mt="'

# smart pane switching with awareness of vim splits
bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# set key as the prefix key combination
set -g prefix C-a
# bind C-b to previous window
bind b previous-window

# Tell tmux that Prefix+a should send the prefix key to the program running in
# the current pane.
# Useful since Ctrl+a usually jumps to beginning of line but we remapped that
# key. Now you can press `<prefix> + a` to do so.
bind a send-prefix


TM_BG="colour236"

TM_ACTIVE_COLOR="colour6"
TM_INACTIVE_COLOR="colour242"

TM_TXT_BRIGHT="colour255"
TM_TXT_MID="colour241"
TM_TXT_DARK="colour235"

TM_HIGHLIGHT_COLOR="colour3"

TM_PREFIX_ACTIVE=$TM_HIGHLIGHT_COLOR
TM_PREFIX_INACTIVE=$TM_TXT_MID

TM_BORDER_ACTIVE="colour4"
TM_BORDER_INACTIVE=$TM_INACTIVE_COLOR

TM_LEFT_TITLE_TXT=$TM_TXT_MID
TM_LEFT_TITLE_BG="colour176"

TM_LEFT_WDW_TXT=$TM_TXT_MID
TM_LEFT_WDW_BG="colour237"

TM_RIGHT_BG="colour237"
TM_RIGHT_TXT=$TM_TXT_BRIGHT
TM_RIGHT_SEP=$TM_HIGHLIGHT_COLOR

# set pane border formats
set -wg pane-border-status top
set-option -g pane-active-border-style fg=$TM_BORDER_ACTIVE
set -g pane-border-style fg=$TM_BORDER_INACTIVE
set -g pane-border-format '\
#[bold] \
#(zsh ~/.dotfiles/tmux_scripts/vcs.sh "#{pane_current_path}")\
  \
#(zsh ~/.dotfiles/tmux_scripts/path.sh "#{pane_current_path}")\
  \
#{pane_current_command} \
'
# # The statusbar {
set -g status-interval 1
set -g status-left-length 1000
set -g status-right-length 1000
set -g status-position bottom
set -g status-justify left
set -g status-bg $TM_BG

set -g status-left "\
#[fg=$TM_LEFT_TITLE_TXT,bg=$TM_LEFT_TITLE_BG,bold] #S #[default,fg=$TM_LEFT_TITLE_BG,bold]\
#[default] \
#[fg=$TM_BG,bg=$TM_ACTIVE_COLOR] #[fg=$TM_LEFT_WDW_TXT,bold]#W #[default,fg=$TM_ACTIVE_COLOR]\
#[default] #{?client_prefix,#[fg=$TM_PREFIX_ACTIVE],#[fg=$TM_PREFIX_INACTIVE]} "

set -g status-right "\
#[default,fg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] #(prodcertstatus --nobinarylog --disable_log_to_disk 2>&1)\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] #(date +'%a %b %e, %l:%M %p' | sed 's/  / /g')\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
#[fg=$TM_RIGHT_TXT,bg=$TM_RIGHT_BG,bold] #(tmux ls | awk -F: '{print $1}' | tr '\n' ',' | sed 's/,\$//g')\
#[fg=$TM_RIGHT_SEP,bg=$TM_RIGHT_BG,bold] \
"

setw -g window-status-current-style fg=$TM_TXT_MID
setw -g window-status-current-style bg=$TM_ACTIVE_COLOR
setw -g window-status-style fg=$TM_TXT_MID
setw -g window-status-style bg=$TM_LEFT_WDW_BG
setw -g window-status-format "#[fg=$TM_BG,bg=$TM_LEFT_WDW_BG]#[default,fg=$TM_LEFT_WDW_TXT,bg=$TM_LEFT_WDW_BG] #I:#F #[fg=$TM_LEFT_WDW_BG,bg=$TM_BG]"
setw -g window-status-current-format "#[fg=$TM_BG,bg=$TM_ACTIVE_COLOR]#[default,bold,fg=$TM_LEFT_WDW_TXT,bg=$TM_ACTIVE_COLOR] #I:#F #[default,fg=$TM_ACTIVE_COLOR,bg=$TM_BG]"
# # }

set-window-option -g automatic-rename off
set-option -g allow-rename off
